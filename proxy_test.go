/*
 * Copyright (c) CERN 2016
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package proxy

import (
	"bytes"
	"testing"
)

var BaseCert = []byte(`-----BEGIN CERTIFICATE-----
MIIIuDCCBqCgAwIBAgIKZRAFqwAAAAFGIjANBgkqhkiG9w0BAQ0FADBWMRIwEAYK
CZImiZPyLGQBGRYCY2gxFDASBgoJkiaJk/IsZAEZFgRjZXJuMSowKAYDVQQDEyFD
RVJOIEdyaWQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTUwNjE2MDYxMzIw
WhcNMTYwNjE1MDYxMzIwWjCBmDESMBAGCgmSJomT8ixkARkWAmNoMRQwEgYKCZIm
iZPyLGQBGRYEY2VybjEWMBQGA1UECxMNT3JnYW5pYyBVbml0czEOMAwGA1UECxMF
VXNlcnMxEDAOBgNVBAMTB3Nha2V0YWcxDzANBgNVBAMTBjY3ODk4NDEhMB8GA1UE
AxMYQWxlamFuZHJvIEFsdmFyZXogQXlsbG9uMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAstHciTg2adwAoUOrhr/XR9O/uZSUnX8VhMn3u8WZlUVp+NhB
PKAvfmBcbIsm+LZOHKtiqpc6K9cj4i0XdRYq9mQObQrwth7E7viUlzWXMzYzHiTD
FfFskvNqh6N/K68GPK7TA5yCKLPs3cjAJ0sbszamDGlzN0HdMppVvARDWwAId2Eb
VdHsgyhrygCBb++VZMFkFk7aWnaOoeV6yDboV8MePN2ZpYyooDxLG//ru8k9ioZq
5TYsSHYKRFL9lqGOjx/3Oxmg5uHe7GtK8/Pq7lU+bbOclmSQoz+hA3tYfaUiLho0
QUS6b/7te/p79DI0tp9HQ0aseRowJKXv8IuR+QIDAQABo4IEQzCCBD8wHQYDVR0O
BBYEFPaMjW8kp2KuQAlg9rPyY9gYolfoMB8GA1UdIwQYMBaAFKWg/WZY/bndeuGy
nZ+j0eVQGJTnMIIBOAYDVR0fBIIBLzCCASswggEnoIIBI6CCAR+GTmh0dHA6Ly9j
YWZpbGVzLmNlcm4uY2gvY2FmaWxlcy9jcmwvQ0VSTiUyMEdyaWQlMjBDZXJ0aWZp
Y2F0aW9uJTIwQXV0aG9yaXR5LmNybIaBzGxkYXA6Ly8vQ049Q0VSTiUyMEdyaWQl
MjBDZXJ0aWZpY2F0aW9uJTIwQXV0aG9yaXR5LENOPUNFUk5QS0kwNSxDTj1DRFAs
Q049UHVibGljJTIwS2V5JTIwU2VydmljZXMsQ049U2VydmljZXMsQ049Q29uZmln
dXJhdGlvbixEQz1jZXJuLERDPWNoP2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q/
YmFzZT9vYmplY3RDbGFzcz1jUkxEaXN0cmlidXRpb25Qb2ludDCCAWIGCCsGAQUF
BwEBBIIBVDCCAVAwYwYIKwYBBQUHMAKGV2h0dHA6Ly9jYWZpbGVzLmNlcm4uY2gv
Y2FmaWxlcy9jZXJ0aWZpY2F0ZXMvQ0VSTiUyMEdyaWQlMjBDZXJ0aWZpY2F0aW9u
JTIwQXV0aG9yaXR5LmNydDCBwgYIKwYBBQUHMAKGgbVsZGFwOi8vL0NOPUNFUk4l
MjBHcmlkJTIwQ2VydGlmaWNhdGlvbiUyMEF1dGhvcml0eSxDTj1BSUEsQ049UHVi
bGljJTIwS2V5JTIwU2VydmljZXMsQ049U2VydmljZXMsQ049Q29uZmlndXJhdGlv
bixEQz1jZXJuLERDPWNoP2NBQ2VydGlmaWNhdGU/YmFzZT9vYmplY3RDbGFzcz1j
ZXJ0aWZpY2F0aW9uQXV0aG9yaXR5MCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5j
ZXJuLmNoL29jc3AwDgYDVR0PAQH/BAQDAgWgMD0GCSsGAQQBgjcVBwQwMC4GJisG
AQQBgjcVCIO90AmC7Y0Nhu2LK4He9TeFgNBiHoWK40yBtaoEAgFkAgEPMCkGA1Ud
JQQiMCAGCisGAQQBgjcKAwQGCCsGAQUFBwMEBggrBgEFBQcDAjAnBgNVHSAEIDAe
MA4GDCsGAQQBYAoEAgICADAMBgoqhkiG90wFAgIBMDUGCSsGAQQBgjcVCgQoMCYw
DAYKKwYBBAGCNwoDBDAKBggrBgEFBQcDBDAKBggrBgEFBQcDAjA7BgNVHREENDAy
oB8GCisGAQQBgjcUAgOgEQwPc2FrZXRhZ0BjZXJuLmNogQ9zYWtldGFnQGNlcm4u
Y2gwRAYJKoZIhvcNAQkPBDcwNTAOBggqhkiG9w0DAgICAIAwDgYIKoZIhvcNAwQC
AgCAMAcGBSsOAwIHMAoGCCqGSIb3DQMHMA0GCSqGSIb3DQEBDQUAA4ICAQArhjyr
pIK2G/xclXpH04rjJd9Y99ZhctCk4AzdUyhtLrB7YcjSevcJMK3ThdNYFQ/LiPUO
1Cd1MQb+LJW9xHnNKoN2AIfP/rlARq9+GGWpTihPbKvCdcM95FXSLeMn48QTDFeB
A11Y55KIRGKCEddSuR0xd1VDPahXn67hIzpSiPFrklAa2WfXRe49a834eryNoZS0
Ab3IzXSCdXdjb21UdZut/E54iIDBLuOLZIPJSBq/rm1HXOyQ/U/jyzC/89EOCv8f
IOssOyWg72vMZ053t9sB/xT1wsQaHrE8V6Gcwj9ghz+HyBbPROmDYaNAV/sGeb8e
QcfWwBuecbkCNNCIMPUjtrE38xSTAz57KLMyxtfPSoUtMpL0/40TbpvqgCfWyB6d
XCN8YjghDOMWaBFjW+9lQKtiE3omxQFOH8cDwXZ5ve3YhIxSPTRqOqI/OnWzcEXb
LvLljd03tJs1xVIQ5WfQII4YEKvZqhVIMlyBr3EIuELZwfQeWe7jCwQ0AU2aAUur
NZBBgm3yesob3bl0EkDNiLVz4R9CxgRDVsvsswrDgOFAjwXIf4TQKci8iSZ1SDiF
TWIYDS6+IVhIBSwfA36oACK0DNoVWPs/r6pmCyYFORuI3Azs78w7FKXiPiEPRuRE
dWufPziFxnIH/iDDSx1reW6z3jmFUq1Y8YFCNQ==
-----END CERTIFICATE-----
`)

// Already expired!
var LegacyProxy = []byte(`-----BEGIN CERTIFICATE-----
MIIMBDCCCuygAwIBAgIKZRAFqwAAAAFGIjANBgkqhkiG9w0BAQ0FADCBmDESMBAG
CgmSJomT8ixkARkWAmNoMRQwEgYKCZImiZPyLGQBGRYEY2VybjEWMBQGA1UECxMN
T3JnYW5pYyBVbml0czEOMAwGA1UECxMFVXNlcnMxEDAOBgNVBAMTB3Nha2V0YWcx
DzANBgNVBAMTBjY3ODk4NDEhMB8GA1UEAxMYQWxlamFuZHJvIEFsdmFyZXogQXls
bG9uMB4XDTE2MDUxODEyMjU0MVoXDTE2MDUxODEyMzE0MVowgagxEjAQBgoJkiaJ
k/IsZAEZFgJjaDEUMBIGCgmSJomT8ixkARkWBGNlcm4xFjAUBgNVBAsTDU9yZ2Fu
aWMgVW5pdHMxDjAMBgNVBAsTBVVzZXJzMRAwDgYDVQQDEwdzYWtldGFnMQ8wDQYD
VQQDEwY2Nzg5ODQxITAfBgNVBAMTGEFsZWphbmRybyBBbHZhcmV6IEF5bGxvbjEO
MAwGA1UEAxMFcHJveHkwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAL/wZwlQ
EOrvQlNYT7CeBKRhmDhEV8Ex6XCYFxIYrE6mFNnIF9bGWF8iW/mShsOg0xucK3Hm
AeIz+yuYnHmQEnGbWYX4vjN5erG7ZyUfeyobMPUTt3YapvGeMHKGbFSW3jlYCtBt
xd4ltwXEkWAc0Ttz+mFT6prepyoo0cgt9Z6hAgMBAAGjggjAMIIIvDCCCHkGCisG
AQQBvkVkZAUEgghpMIIIZTCCCGEwgghdMIIHRQIBATCBsKCBrTCBnqSBmzCBmDES
MBAGCgmSJomT8ixkARkWAmNoMRQwEgYKCZImiZPyLGQBGRYEY2VybjEWMBQGA1UE
CxMNT3JnYW5pYyBVbml0czEOMAwGA1UECxMFVXNlcnMxEDAOBgNVBAMTB3Nha2V0
YWcxDzANBgNVBAMTBjY3ODk4NDEhMB8GA1UEAxMYQWxlamFuZHJvIEFsdmFyZXog
QXlsbG9uAgplEAWrAAAAAUYioF4wXKRaMFgxCzAJBgNVBAYTAkdSMRMwEQYDVQQK
DApIZWxsYXNHcmlkMRYwFAYDVQQLDA1oZWxsYXNncmlkLmdyMRwwGgYDVQQDDBN2
b21zMi5oZWxsYXNncmlkLmdyMA0GCSqGSIb3DQEBCwUAAhEAka2aFmbuTOGMiwVk
KgaBgDAiGA8yMDE2MDUxODEyMzA0MVoYDzIwMTYwNTE4MTIzMTQxWjCBgzCBgAYK
KwYBBAG+RWRkBDFyMHCgI4YhZHRlYW06Ly92b21zMi5oZWxsYXNncmlkLmdyOjE1
MDA0MEkEIC9kdGVhbS9Sb2xlPU5VTEwvQ2FwYWJpbGl0eT1OVUxMBCUvZHRlYW0v
Y2Vybi9Sb2xlPU5VTEwvQ2FwYWJpbGl0eT1OVUxMMIIFXzCCBS8GCisGAQQBvkVk
ZAoEggUfMIIFGzCCBRcwggUTMIID+6ADAgECAgIRyzANBgkqhkiG9w0BAQsFADBj
MQswCQYDVQQGEwJHUjETMBEGA1UEChMKSGVsbGFzR3JpZDEiMCAGA1UECxMZQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdGllczEbMBkGA1UEAxMSSGVsbGFzR3JpZCBDQSAy
MDA2MB4XDTE2MDQwNDE0Mjc1MVoXDTE2MDcxMDE0Mjc1MVowWDELMAkGA1UEBhMC
R1IxEzARBgNVBAoMCkhlbGxhc0dyaWQxFjAUBgNVBAsMDWhlbGxhc2dyaWQuZ3Ix
HDAaBgNVBAMME3ZvbXMyLmhlbGxhc2dyaWQuZ3IwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQC30Mcv4txDE1BBq99E/T4JFQdJLH5A2lnA0WY+uf3N67+K
wyTdRmS9Q+PMew0/k5+lDGcH+RruX8ile7U2BNS/2Z5dWWwyuW+sUoxnlqERN6jH
TADqSINWHYlxfp6NpTy4XoKnaVV3tw0dtVRg5/iUv1pDDg+A2flcm71AejHDnNCE
OS94C43505k57VuL7UXU4tgaKQHnUQW6rO4ykT8Yw47Nm6R5IRC0Asj8Nbk3xZOy
vL5F/g2bntLAeE0B19UOOvYaFSy3o1iBajht1PtNlTkfXYTjP5fGNF/XlKhy3HGa
N+dRX+GRiW9Sw5MLAeHNyGIr9zBk/pcH71T0higBAgMBAAGjggHaMIIB1jAMBgNV
HRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIEsDAdBgNVHQ4EFgQU9DPPa81siqapiQ+c
q4gL7VVKizIwgZIGA1UdIwSBijCBh4AUCdfyXQvjOh9s5EO+AT1PPLBmXiahbKRq
MGgxCzAJBgNVBAYTAkdSMRMwEQYDVQQKEwpIZWxsYXNHcmlkMSIwIAYDVQQLExlD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0aWVzMSAwHgYDVQQDExdIZWxsYXNHcmlkIFJv
b3QgQ0EgMjAwNoIBATAlBgNVHRIEHjAcgRpoZWxsYXNncmlkLWNhQGdyaWQuYXV0
aC5ncjAeBgNVHREEFzAVghN2b21zMi5oZWxsYXNncmlkLmdyMHEGA1UdIARqMGgw
ZgYNKwYBBAGBgQMUAQECAzBVMFMGCCsGAQUFBwIBFkdodHRwOi8vY3JsLmdyaWQu
YXV0aC5nci9oZWxsYXNncmlkLWNhLTIwMDYvY3BzL0hlbGxhc0dyaWQtQ0EtQ1At
Q1BTLnBkZjBIBgNVHR8EQTA/MD2gO6A5hjdodHRwOi8vY3JsLmdyaWQuYXV0aC5n
ci9oZWxsYXNncmlkLWNhLTIwMDYvODJiMzZmY2EuY3JsMA0GCSqGSIb3DQEBCwUA
A4IBAQBEKDJi/LDjOQATq2jJ17kUdco4bieybWiwShk/d9pNKUjYE7Y6prFjXFlS
HrzxET1Q12hvpEaHeUCyUjx2BGRATMDoKw2iwZIMq8Xy38kwDQ4D8HIXZrDPzq4o
Sh8aC2XkAK1keuC0tBK+l+iVDtUGUpyeeiGFSZQDvtqiMS0OsnHQWoYaXt8Y2u58
RMY++9iVGkwQxr0zhJ0Oc+LZ6RjP2DoHE8ViQx1bQNg1Jz9wtaA/a2lW3yt5cd/7
eJi00jtuwbJwmrXv68o69vx9IqJuCYapuG7Yp1EUuFYkk41rx3h1a5nZRnxr4sIX
9MrwRSIbyX8cK9M00/6qcMXizqBUMAkGA1UdOAQCBQAwHwYDVR0jBBgwFoAU9DPP
a81siqapiQ+cq4gL7VVKizIwDQYJKoZIhvcNAQELBQADggEBAEoXB6Iatyg6ATEm
QDIs6T1+BpDC9qegLvfJzzPloG5VMqiEqpwdwDYMpUK/BSknWah/TjEap+OadnoX
8fMYyxOisYGefk5C95I7MoHkmLPDW3Ny5Ru3PWKW2WTipVPLpM9UiTf4t45KyXmc
nwVqScF4LL0maTss1cc5TfIbc9XzZwg+j5Kd4iiv/945BEfdkAgZD5ao4ykymzGU
G2ZB4dTMiKXohh4w3i1E7ekuggNSzcreBaENC72M/8wstmi4fXlAkpj6NmEYTz9x
ofBId394vjSLCv448tNbqGRk6NaSpwZAtBq/gQJ91x7a5o1t+1wVosmage0WTaJZ
iQKxLA4wDgYDVR0PAQH/BAQDAgWgMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAU
9oyNbySnYq5ACWD2s/Jj2BiiV+gwDQYJKoZIhvcNAQENBQADggEBAHvdILi5yXqO
2XKHplELCGyNRBtNFuQrypUWnKa3GqcsMJSsB8x3TYBD3L52qiKwUwJibqsJ8Db+
be20/Uy+bcg9l57jPOcHzx0H3vU+RNgHUNzYSPzh4QI64wZpgGYiA3JxMSQacMQU
Qt30iNBQmt8U+u/fuQUUWoIL4Fk/ks8LoHfjaEE3yXNWTI8ASnSJeFaSk0HzbwH7
n6z2ib3GRbiWMG5YVAOutcQjmLYEui05xK5lYDdMmDm3h5KjLIUmqbDb5Q88OvAs
TzQJVgvrfxDNaYUte8NPZwaQakbn6ejahtJGL2qE9HxR8f9Hu7oK8Dbj8AzIKuhI
nWdo0bJ9yec=
-----END CERTIFICATE-----
`)

var DraftProxy = []byte(`
-----BEGIN CERTIFICATE-----
MIIMIjCCCwqgAwIBAgIFAOAcz1wwDQYJKoZIhvcNAQENBQAwgZgxEjAQBgoJkiaJ
k/IsZAEZFgJjaDEUMBIGCgmSJomT8ixkARkWBGNlcm4xFjAUBgNVBAsTDU9yZ2Fu
aWMgVW5pdHMxDjAMBgNVBAsTBVVzZXJzMRAwDgYDVQQDEwdzYWtldGFnMQ8wDQYD
VQQDEwY2Nzg5ODQxITAfBgNVBAMTGEFsZWphbmRybyBBbHZhcmV6IEF5bGxvbjAe
Fw0xNjA1MTgxMjMxMTRaFw0xNjA1MTgxMjM3MTRaMIGtMRIwEAYKCZImiZPyLGQB
GRYCY2gxFDASBgoJkiaJk/IsZAEZFgRjZXJuMRYwFAYDVQQLEw1PcmdhbmljIFVu
aXRzMQ4wDAYDVQQLEwVVc2VyczEQMA4GA1UEAxMHc2FrZXRhZzEPMA0GA1UEAxMG
Njc4OTg0MSEwHwYDVQQDExhBbGVqYW5kcm8gQWx2YXJleiBBeWxsb24xEzARBgNV
BAMTCjM3NTk5ODQ0NzYwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKTY6BGO
gkS2EGU4MWYMCl5Zf1Jflm5gD1QGEjRvEdse8WcFnBhZjqF9vmex6rAN4RaNyrYo
4tjFPzqFumBp3g20ZD/dZPFQRzzLAucCqcEH+MRHC4ypLzWaEgeKm9k36g5PRMQd
FmARXtCmK49ishOEzXjUsAz0kag2P+aADpelAgMBAAGjggjeMIII2jCCCHkGCisG
AQQBvkVkZAUEgghpMIIIZTCCCGEwgghdMIIHRQIBATCBsKCBrTCBnqSBmzCBmDES
MBAGCgmSJomT8ixkARkWAmNoMRQwEgYKCZImiZPyLGQBGRYEY2VybjEWMBQGA1UE
CxMNT3JnYW5pYyBVbml0czEOMAwGA1UECxMFVXNlcnMxEDAOBgNVBAMTB3Nha2V0
YWcxDzANBgNVBAMTBjY3ODk4NDEhMB8GA1UEAxMYQWxlamFuZHJvIEFsdmFyZXog
QXlsbG9uAgplEAWrAAAAAUYioF4wXKRaMFgxCzAJBgNVBAYTAkdSMRMwEQYDVQQK
DApIZWxsYXNHcmlkMRYwFAYDVQQLDA1oZWxsYXNncmlkLmdyMRwwGgYDVQQDDBN2
b21zMi5oZWxsYXNncmlkLmdyMA0GCSqGSIb3DQEBCwUAAhEA6Wjm0oPNS9GVNhx7
drJrFzAiGA8yMDE2MDUxODEyMzYxM1oYDzIwMTYwNTE4MTIzNzEzWjCBgzCBgAYK
KwYBBAG+RWRkBDFyMHCgI4YhZHRlYW06Ly92b21zMi5oZWxsYXNncmlkLmdyOjE1
MDA0MEkEIC9kdGVhbS9Sb2xlPU5VTEwvQ2FwYWJpbGl0eT1OVUxMBCUvZHRlYW0v
Y2Vybi9Sb2xlPU5VTEwvQ2FwYWJpbGl0eT1OVUxMMIIFXzCCBS8GCisGAQQBvkVk
ZAoEggUfMIIFGzCCBRcwggUTMIID+6ADAgECAgIRyzANBgkqhkiG9w0BAQsFADBj
MQswCQYDVQQGEwJHUjETMBEGA1UEChMKSGVsbGFzR3JpZDEiMCAGA1UECxMZQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdGllczEbMBkGA1UEAxMSSGVsbGFzR3JpZCBDQSAy
MDA2MB4XDTE2MDQwNDE0Mjc1MVoXDTE2MDcxMDE0Mjc1MVowWDELMAkGA1UEBhMC
R1IxEzARBgNVBAoMCkhlbGxhc0dyaWQxFjAUBgNVBAsMDWhlbGxhc2dyaWQuZ3Ix
HDAaBgNVBAMME3ZvbXMyLmhlbGxhc2dyaWQuZ3IwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQC30Mcv4txDE1BBq99E/T4JFQdJLH5A2lnA0WY+uf3N67+K
wyTdRmS9Q+PMew0/k5+lDGcH+RruX8ile7U2BNS/2Z5dWWwyuW+sUoxnlqERN6jH
TADqSINWHYlxfp6NpTy4XoKnaVV3tw0dtVRg5/iUv1pDDg+A2flcm71AejHDnNCE
OS94C43505k57VuL7UXU4tgaKQHnUQW6rO4ykT8Yw47Nm6R5IRC0Asj8Nbk3xZOy
vL5F/g2bntLAeE0B19UOOvYaFSy3o1iBajht1PtNlTkfXYTjP5fGNF/XlKhy3HGa
N+dRX+GRiW9Sw5MLAeHNyGIr9zBk/pcH71T0higBAgMBAAGjggHaMIIB1jAMBgNV
HRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIEsDAdBgNVHQ4EFgQU9DPPa81siqapiQ+c
q4gL7VVKizIwgZIGA1UdIwSBijCBh4AUCdfyXQvjOh9s5EO+AT1PPLBmXiahbKRq
MGgxCzAJBgNVBAYTAkdSMRMwEQYDVQQKEwpIZWxsYXNHcmlkMSIwIAYDVQQLExlD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0aWVzMSAwHgYDVQQDExdIZWxsYXNHcmlkIFJv
b3QgQ0EgMjAwNoIBATAlBgNVHRIEHjAcgRpoZWxsYXNncmlkLWNhQGdyaWQuYXV0
aC5ncjAeBgNVHREEFzAVghN2b21zMi5oZWxsYXNncmlkLmdyMHEGA1UdIARqMGgw
ZgYNKwYBBAGBgQMUAQECAzBVMFMGCCsGAQUFBwIBFkdodHRwOi8vY3JsLmdyaWQu
YXV0aC5nci9oZWxsYXNncmlkLWNhLTIwMDYvY3BzL0hlbGxhc0dyaWQtQ0EtQ1At
Q1BTLnBkZjBIBgNVHR8EQTA/MD2gO6A5hjdodHRwOi8vY3JsLmdyaWQuYXV0aC5n
ci9oZWxsYXNncmlkLWNhLTIwMDYvODJiMzZmY2EuY3JsMA0GCSqGSIb3DQEBCwUA
A4IBAQBEKDJi/LDjOQATq2jJ17kUdco4bieybWiwShk/d9pNKUjYE7Y6prFjXFlS
HrzxET1Q12hvpEaHeUCyUjx2BGRATMDoKw2iwZIMq8Xy38kwDQ4D8HIXZrDPzq4o
Sh8aC2XkAK1keuC0tBK+l+iVDtUGUpyeeiGFSZQDvtqiMS0OsnHQWoYaXt8Y2u58
RMY++9iVGkwQxr0zhJ0Oc+LZ6RjP2DoHE8ViQx1bQNg1Jz9wtaA/a2lW3yt5cd/7
eJi00jtuwbJwmrXv68o69vx9IqJuCYapuG7Yp1EUuFYkk41rx3h1a5nZRnxr4sIX
9MrwRSIbyX8cK9M00/6qcMXizqBUMAkGA1UdOAQCBQAwHwYDVR0jBBgwFoAU9DPP
a81siqapiQ+cq4gL7VVKizIwDQYJKoZIhvcNAQELBQADggEBAILPzZKONOFIW0im
W8stZgghJzO49iYQPUZ1t3qCR6JpDM/RKp3Os8eqiDCD1TnBuOQYt5aoE/hE4O0n
RpLzkg5fZD7npHCNzGNQFxkLGeL7vWsw29CFNfIAVLfoKZJcEe+f8f52wEZF58qW
rKri0M57NTEt9BMF4+OML91gq1TYzMCoprU8PJwoaQ4eY2JqwyoBBqBoxW4XpahT
zaf0gXSM/DKz3DfSRbGTWg5uIz+Hq6wAlCy9ueV17zJqyCC4KSzhGuonZpRa1ft8
8CRd3Z/8j2ODLNqntVHhOthZ93YuzEXygB3yTVSPXxRA0coys1rx/UP8FWMFb6LI
w2Ux7W0wDgYDVR0PAQH/BAQDAgWgMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAU
9oyNbySnYq5ACWD2s/Jj2BiiV+gwHAYKKwYBBAGbUAGBXgQOMAwwCgYIKwYBBQUH
FQEwDQYJKoZIhvcNAQENBQADggEBADRC8KpFzT+tj6CEXrQXnGpJXjTUkEwYURov
HSXhvO9aUY4NvJbcUEpXxtu+FjZN8CLr0KQJDRZ/1mrAiUymeoqnsP3wGRXZrJgg
iOpF46lTQgEPXbCwVSn1AixMyTTYkC3kwNz2bpbvgJGGqYExHBxVUOWh7yMpze+7
JmK0zRfyzGobABzd8FBRy9LuYcgHCBLiiNSeWCrRDuqtFuU6AqMfz8GKTZSHXsGS
KhRBrrdDF6aSvI0fZeEu9akK45PEqBAK8cHUAuLssSEtN9l8PlLYrSCaUwAJ1kqo
daYRxS7Y5/hmuvtql5CqPNIzl55bCUOI6J1dC0sYs+N7E8Mb/ZI=
-----END CERTIFICATE-----
`)

var RfcProxy = []byte(`-----BEGIN CERTIFICATE-----
MIIMIzCCCwugAwIBAgIFAJIwp7EwDQYJKoZIhvcNAQENBQAwgZgxEjAQBgoJkiaJ
k/IsZAEZFgJjaDEUMBIGCgmSJomT8ixkARkWBGNlcm4xFjAUBgNVBAsTDU9yZ2Fu
aWMgVW5pdHMxDjAMBgNVBAsTBVVzZXJzMRAwDgYDVQQDEwdzYWtldGFnMQ8wDQYD
VQQDEwY2Nzg5ODQxITAfBgNVBAMTGEFsZWphbmRybyBBbHZhcmV6IEF5bGxvbjAe
Fw0xNjA1MTgxMjMyMTNaFw0xNjA1MTgxMjM4MTNaMIGtMRIwEAYKCZImiZPyLGQB
GRYCY2gxFDASBgoJkiaJk/IsZAEZFgRjZXJuMRYwFAYDVQQLEw1PcmdhbmljIFVu
aXRzMQ4wDAYDVQQLEwVVc2VyczEQMA4GA1UEAxMHc2FrZXRhZzEPMA0GA1UEAxMG
Njc4OTg0MSEwHwYDVQQDExhBbGVqYW5kcm8gQWx2YXJleiBBeWxsb24xEzARBgNV
BAMTCjI0NTI2NjIxOTMwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALzJ/aCx
gmGR0u6lCT0UAh02b/ucgiYz/rKsdDvWkayrgVmltg1BdulgkBu3NLxWm7VrlqeF
Q4iCrzt3pViWV8a14cnDYHHbgwlXi2mVNKSIcTAmMuCsHEwG3CbaoNbjnpfLTIIt
eMYmUyS0ghwQAhhmMmPzrgrbtCjVldwwfBa7AgMBAAGjggjfMIII2zCCCHkGCisG
AQQBvkVkZAUEgghpMIIIZTCCCGEwgghdMIIHRQIBATCBsKCBrTCBnqSBmzCBmDES
MBAGCgmSJomT8ixkARkWAmNoMRQwEgYKCZImiZPyLGQBGRYEY2VybjEWMBQGA1UE
CxMNT3JnYW5pYyBVbml0czEOMAwGA1UECxMFVXNlcnMxEDAOBgNVBAMTB3Nha2V0
YWcxDzANBgNVBAMTBjY3ODk4NDEhMB8GA1UEAxMYQWxlamFuZHJvIEFsdmFyZXog
QXlsbG9uAgplEAWrAAAAAUYioF4wXKRaMFgxCzAJBgNVBAYTAkdSMRMwEQYDVQQK
DApIZWxsYXNHcmlkMRYwFAYDVQQLDA1oZWxsYXNncmlkLmdyMRwwGgYDVQQDDBN2
b21zMi5oZWxsYXNncmlkLmdyMA0GCSqGSIb3DQEBCwUAAhEA27cjN2EkSOKM5cBU
BjxG5zAiGA8yMDE2MDUxODEyMzcxM1oYDzIwMTYwNTE4MTIzODEzWjCBgzCBgAYK
KwYBBAG+RWRkBDFyMHCgI4YhZHRlYW06Ly92b21zMi5oZWxsYXNncmlkLmdyOjE1
MDA0MEkEIC9kdGVhbS9Sb2xlPU5VTEwvQ2FwYWJpbGl0eT1OVUxMBCUvZHRlYW0v
Y2Vybi9Sb2xlPU5VTEwvQ2FwYWJpbGl0eT1OVUxMMIIFXzCCBS8GCisGAQQBvkVk
ZAoEggUfMIIFGzCCBRcwggUTMIID+6ADAgECAgIRyzANBgkqhkiG9w0BAQsFADBj
MQswCQYDVQQGEwJHUjETMBEGA1UEChMKSGVsbGFzR3JpZDEiMCAGA1UECxMZQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdGllczEbMBkGA1UEAxMSSGVsbGFzR3JpZCBDQSAy
MDA2MB4XDTE2MDQwNDE0Mjc1MVoXDTE2MDcxMDE0Mjc1MVowWDELMAkGA1UEBhMC
R1IxEzARBgNVBAoMCkhlbGxhc0dyaWQxFjAUBgNVBAsMDWhlbGxhc2dyaWQuZ3Ix
HDAaBgNVBAMME3ZvbXMyLmhlbGxhc2dyaWQuZ3IwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQC30Mcv4txDE1BBq99E/T4JFQdJLH5A2lnA0WY+uf3N67+K
wyTdRmS9Q+PMew0/k5+lDGcH+RruX8ile7U2BNS/2Z5dWWwyuW+sUoxnlqERN6jH
TADqSINWHYlxfp6NpTy4XoKnaVV3tw0dtVRg5/iUv1pDDg+A2flcm71AejHDnNCE
OS94C43505k57VuL7UXU4tgaKQHnUQW6rO4ykT8Yw47Nm6R5IRC0Asj8Nbk3xZOy
vL5F/g2bntLAeE0B19UOOvYaFSy3o1iBajht1PtNlTkfXYTjP5fGNF/XlKhy3HGa
N+dRX+GRiW9Sw5MLAeHNyGIr9zBk/pcH71T0higBAgMBAAGjggHaMIIB1jAMBgNV
HRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIEsDAdBgNVHQ4EFgQU9DPPa81siqapiQ+c
q4gL7VVKizIwgZIGA1UdIwSBijCBh4AUCdfyXQvjOh9s5EO+AT1PPLBmXiahbKRq
MGgxCzAJBgNVBAYTAkdSMRMwEQYDVQQKEwpIZWxsYXNHcmlkMSIwIAYDVQQLExlD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0aWVzMSAwHgYDVQQDExdIZWxsYXNHcmlkIFJv
b3QgQ0EgMjAwNoIBATAlBgNVHRIEHjAcgRpoZWxsYXNncmlkLWNhQGdyaWQuYXV0
aC5ncjAeBgNVHREEFzAVghN2b21zMi5oZWxsYXNncmlkLmdyMHEGA1UdIARqMGgw
ZgYNKwYBBAGBgQMUAQECAzBVMFMGCCsGAQUFBwIBFkdodHRwOi8vY3JsLmdyaWQu
YXV0aC5nci9oZWxsYXNncmlkLWNhLTIwMDYvY3BzL0hlbGxhc0dyaWQtQ0EtQ1At
Q1BTLnBkZjBIBgNVHR8EQTA/MD2gO6A5hjdodHRwOi8vY3JsLmdyaWQuYXV0aC5n
ci9oZWxsYXNncmlkLWNhLTIwMDYvODJiMzZmY2EuY3JsMA0GCSqGSIb3DQEBCwUA
A4IBAQBEKDJi/LDjOQATq2jJ17kUdco4bieybWiwShk/d9pNKUjYE7Y6prFjXFlS
HrzxET1Q12hvpEaHeUCyUjx2BGRATMDoKw2iwZIMq8Xy38kwDQ4D8HIXZrDPzq4o
Sh8aC2XkAK1keuC0tBK+l+iVDtUGUpyeeiGFSZQDvtqiMS0OsnHQWoYaXt8Y2u58
RMY++9iVGkwQxr0zhJ0Oc+LZ6RjP2DoHE8ViQx1bQNg1Jz9wtaA/a2lW3yt5cd/7
eJi00jtuwbJwmrXv68o69vx9IqJuCYapuG7Yp1EUuFYkk41rx3h1a5nZRnxr4sIX
9MrwRSIbyX8cK9M00/6qcMXizqBUMAkGA1UdOAQCBQAwHwYDVR0jBBgwFoAU9DPP
a81siqapiQ+cq4gL7VVKizIwDQYJKoZIhvcNAQELBQADggEBAJMg0rjV9AXdh6ez
EGL5f/hlEUq6d+uTmLnb3JKlTJCIbA/AO31DhdswlbnuyJp44fRoxcXJUanAK91N
7AnAH/58biuAIyqD5vmUx5wDkImw6SSEFCb9T280tUMRLwc++Hk3zudSmyY+Q0t6
lvHgQMjaAQpfk/2qnEDnT1bSsxCSiE3zxi2pmpWUksjO554BEY471sLnCXlPHkeP
KE+SyKiunR05j1oIE9ty8TwtlhsQnQC3Pw3VGMTlZnEXvOcVTO6HjlT0wlAJlTs7
tb5jdLBfb6rncSzGhpX/4plquKwgQVMhyiB3sk/mzNa7/+J9+7NR8i/TWKqFBPwk
Qa8lERIwDgYDVR0PAQH/BAQDAgWgMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAU
9oyNbySnYq5ACWD2s/Jj2BiiV+gwHQYIKwYBBQUHAQ4BAf8EDjAMMAoGCCsGAQUF
BxUBMA0GCSqGSIb3DQEBDQUAA4IBAQA+3kuP3RJ3VSPd1UH9HhMzVJCHt3SYMtI0
iBHYszSWC6ppzrhYs4FRNKM+NNTm9O5NTjdf4gB/M5S4raIMkakFN4OOdX5GHh6K
kGIHICDOrHcZgUsQT4MDEIJIcKHM1zx9pOX1mqMUZ1GhuNFtcXy5Ob5TL4tqMSnJ
3/+pIOq40v8p+vaHZZ5Ha4XFDHG/JkfrU34pbO5IFC4GJIB+xop+HEJ3XMKigaSq
siOs0ZBPFReRIrox9/NGtL1Xffns4zakJiaglxW8BOEIiJcb/yvZbvV2vFbzrOH8
lR/i0zjHVmx+zcLAA4Q9+NOLVH/Ba7527a5OM64mpPk/nSBw9khW
-----END CERTIFICATE-----
`)

func TestParseMalformed(t *testing.T) {
	var p X509Proxy
	if e := p.Decode([]byte("RANDOM GARBAGE")); e == nil {
		t.Fatal("Expected an error")
	}
}

func commonAsserts(proxy *X509Proxy, t *testing.T) {
	if proxy == nil {
		t.Fatal("Proxy must not be nil")
	}
	if proxy.Certificate == nil {
		t.Fatal("No certificate loaded")
	}
	if proxy.Key != nil {
		t.Fatal("Unexpected private key")
	}
	if proxy.Identity != "/DC=ch/DC=cern/OU=Organic Units/OU=Users/CN=saketag/CN=678984/CN=Alejandro Alvarez Ayllon" {
		t.Fatal("Unexpected user dn: ", proxy.Subject)
	}
	if len(proxy.VomsAttributes) != 1 {
		t.Fatal("Was expecting at one VO extension")
	}
	if proxy.VomsAttributes[0].Vo != "dteam" {
		t.Fatal("Expecting dteam VO")
	}
	if proxy.VomsAttributes[0].PolicyAuthority != "dteam://voms2.hellasgrid.gr:15004" {
		t.Fatal("Unexpected PolicyAuthority")
	}
	if len(proxy.Chain) != 1 {
		t.Fatal("Expecting one certificate in the chain")
	}
	if proxy.DelegationID() == "" {
		t.Fatal("Delegation id empty")
	}
}

func TestLegacyProxy(t *testing.T) {
	full := make([]byte, 0, len(BaseCert)*3)
	full = append(full, LegacyProxy...)
	full = append(full, BaseCert...)

	var p X509Proxy
	if e := p.Decode(full); e != nil {
		t.Fatal(e)
	}

	commonAsserts(&p, t)
	if p.ProxyType != TypeLegacy {
		t.Fatal("Expecting Legacy proxy")
	}
}

func TestDraftProxy(t *testing.T) {
	full := make([]byte, 0, len(BaseCert)*3)
	full = append(full, DraftProxy...)
	full = append(full, BaseCert...)

	var p X509Proxy
	if e := p.Decode(full); e != nil {
		t.Fatal(e)
	}

	commonAsserts(&p, t)
	if p.ProxyType != TypeDraft {
		t.Fatal("Expecting Draft proxy")
	}
}

func TestRfcProxy(t *testing.T) {
	full := make([]byte, 0, len(BaseCert)*3)
	full = append(full, RfcProxy...)
	full = append(full, BaseCert...)

	var p X509Proxy
	if e := p.Decode(full); e != nil {
		t.Fatal(e)
	}

	commonAsserts(&p, t)
	if p.ProxyType != TypeRFC3820 {
		t.Fatal("Expecting RFC proxy")
	}
}

func TestSerialize(t *testing.T) {
	original := make([]byte, 0, len(BaseCert)*3)
	original = append(original, RfcProxy...)
	original = append(original, BaseCert...)

	var p X509Proxy
	if e := p.Decode(original); e != nil {
		t.Fatal(e)
	}

	pem := p.Encode()
	if !bytes.Equal(original, pem) {
		t.Fatal("Serialized version does not match the original one")
	}
}
